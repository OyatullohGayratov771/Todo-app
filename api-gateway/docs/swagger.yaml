basePath: /
definitions:
  userpb.LoginUserReq:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  userpb.RegisterUserReq:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  userpb.UpdateEmailReq:
    properties:
      newemail:
        type: string
    type: object
  userpb.UpdatePasswordReq:
    properties:
      newpassword:
        type: string
      oldpassword:
        type: string
    type: object
  userpb.UpdateUserNameReq:
    properties:
      newusername:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for todo-app.
  title: TODO-APP
  version: "1.0"
paths:
  /user/login:
    post:
      consumes:
      - application/json
      description: Login user and return JWT token
      parameters:
      - description: User login info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/userpb.LoginUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: Create a new user and return JWT token
      parameters:
      - description: User registration info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/userpb.RegisterUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register new user
      tags:
      - user
  /user/updateemail:
    put:
      consumes:
      - application/json
      description: Allows an authenticated user to update their email
      parameters:
      - description: New email
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/userpb.UpdateEmailReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user's email
      tags:
      - user
  /user/updatename:
    put:
      consumes:
      - application/json
      description: Allows an authenticated user to update their username
      parameters:
      - description: New username
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/userpb.UpdateUserNameReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user's name
      tags:
      - user
  /user/updatepassword:
    put:
      consumes:
      - application/json
      description: Allows an authenticated user to update their password
      parameters:
      - description: New password
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/userpb.UpdatePasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user's name
      tags:
      - user
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
